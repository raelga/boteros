#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import logging
import telegram
import os
from telegram.ext import (CallbackQueryHandler, Filters, MessageHandler, Updater, CommandHandler)

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO)

LOG = logging.getLogger(__name__)

def callback(bot, update):
    if update.callback_query.data == 'notification1':  
        bot.answer_callback_query(update.callback_query.id, text='bu', show_alert=True  )
    if update.callback_query.data == 'notification2':
        bot.answer_callback_query(update.callback_query.id, text='bu', show_alert=False  )

def menu(bot, update):
    bot.sendMessage(
        update.message.chat_id,
        'testing custom keyboard',
        reply_markup=telegram.InlineKeyboardMarkup(
            [
                [
                    telegram.InlineKeyboardButton('notification1', callback_data='notification1'),
                    telegram.InlineKeyboardButton('notification2', callback_data='notification2')
                ],
                [
                    telegram.InlineKeyboardButton('B1', url='https://www.youtube.com/watch?v=2Z4m4lnjxkY'),
                    telegram.InlineKeyboardButton('B2', url='https://www.youtube.com/watch?v=dQw4w9WgXcQ'),
                    telegram.InlineKeyboardButton('B3', url='https://www.youtube.com/watch?v=dQw4w9WgXcQ')
                ]
            ]
        )
    )

def start():
    """Retrieves messages from the telegram API."""

    updater = Updater(os.environ['TELEGRAM_TOKEN'])
    dispatcher = updater.dispatcher

    LOG.info('Bot %s up and ready!', (dispatcher.bot.username))

    # Specific handlers
    dispatcher.add_handler(CommandHandler("menu", menu))
    dispatcher.add_handler(CallbackQueryHandler(callback))

    # Start the Bot
    updater.start_polling()

    # Block until the user presses Ctrl-C or the process receives SIGINT,
    # SIGTERM or SIGABRT. This should be used most of the time, since
    # start_polling() is non-blocking and will stop the bot gracefully.
    updater.idle()

if __name__ == '__main__':
    start()